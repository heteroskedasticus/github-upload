categoria != "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
p1 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO") %>%
mutate (perc_votos = 1,
iter = "CABA")
rbind(p1,
p2,
p3,
p4,
p5,
p6)
rbind(p1,
p2,
p3,
p4,
p5)
carto_df <- rbind(p1,
p2,
p3,
p4,
p5)
View(carto_df)
ggplot(carto_df)+
geom_sf()
ggplot(carto_df)+
geom_sf()+
facet_wrap(~categoria)
ggplot(carto_df)+
geom_sf()+
facet_wrap(~categoria)+
theme_map()
ggplot(carto_df)+
geom_sf()+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos_carto))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos_carto))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle({closest_state})
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos_carto))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle(title = {closest_state})
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos_carto))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
View(shp_comunas_2)
shp_comunas_2 <- left_join(shp_comunas, Votaciones, by= c("COMUNAS" = "comuna")) %>%
mutate(perc_votos_carto = case_when(tipo_de_votacion == "PASO"~ (((AREA * perc_votos)) %>%
rescale(to = c(1,2))),
TRUE~(((AREA * perc_votos)) %>%
rescale(to = c(1,2)))))
p1 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO") %>%
mutate (perc_votos = 1,
iter = "CABA")
p2 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria == "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p3 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria != "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p4 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria == "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
p5 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria != "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
carto_df <- rbind(p1,
p2,
p3,
p4,
p5)
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos_carto))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
p1 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO") %>%
mutate (perc_votos = .5,
iter = "CABA")
p2 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria == "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p3 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria != "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p4 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria == "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
p5 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria != "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
carto_df <- rbind(p1,
p2,
p3,
p4,
p5)
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
library(forcats)
levels(carto_df)
levels(carto_df$categoria)
levels(factor(carto_df$categoria))
carto_df$categoria <- as.factor(carto_df$categoria)
carto_df$iter <- as.factor(carto_df$iter)
levels(carto_df$categoria)
levels(carto_df$iter)
levels(carto_df$iter) <- c("CABA", "PASO", "Definitivas")
levels(carto_df$iter)
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
shp_comunas_2 <- left_join(shp_comunas, Votaciones, by= c("COMUNAS" = "comuna")) %>%
mutate(perc_votos_carto = case_when(tipo_de_votacion == "PASO"~ (((AREA * (1+perc_votos)^2) %>%
rescale(to = c(1,2)))),
TRUE~(((AREA * (1+perc_votos)^2) %>%
rescale(to = c(1,2))))))
p1 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO") %>%
mutate (perc_votos = .5,
iter = "CABA")
p2 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria == "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p3 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria != "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p4 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria == "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
p5 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria != "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
carto_df <- rbind(p1,
p2,
p3,
p4,
p5)
carto_df$categoria <- as.factor(carto_df$categoria)
carto_df$iter <- as.factor(carto_df$iter)
levels(carto_df$iter) <- c("CABA", "PASO", "Definitivas")
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
shp_comunas_2 <- left_join(shp_comunas, Votaciones, by= c("COMUNAS" = "comuna")) %>%
mutate(perc_votos_carto = case_when(tipo_de_votacion == "PASO"~ (((AREA * (1+perc_votos)^2))),
TRUE~(((AREA * (1+perc_votos)^2)))))
p1 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO") %>%
mutate (perc_votos = .5,
iter = "CABA")
p2 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria == "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p3 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria != "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p4 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria == "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
p5 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria != "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
carto_df <- rbind(p1,
p2,
p3,
p4,
p5)
carto_df$categoria <- as.factor(carto_df$categoria)
carto_df$iter <- as.factor(carto_df$iter)
levels(carto_df$iter) <- c("CABA", "PASO", "Definitivas")
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
ggplot(carto_df)+
geom_sf()+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
ggplot(carto_df)+
geom_sf()+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
shp_comunas_2 <- left_join(shp_comunas, Votaciones, by= c("COMUNAS" = "comuna")) %>%
mutate(perc_votos_carto = case_when(tipo_de_votacion == "PASO"~ (((AREA * (1+perc_votos)^5))),
TRUE~(((AREA * (1+perc_votos)^5)))))
p1 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO") %>%
mutate (perc_votos = .5,
iter = "CABA")
p2 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria == "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p3 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria != "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p4 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria == "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
p5 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria != "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
carto_df <- rbind(p1,
p2,
p3,
p4,
p5)
carto_df$categoria <- as.factor(carto_df$categoria)
carto_df$iter <- as.factor(carto_df$iter)
levels(carto_df$iter) <- c("CABA", "PASO", "Definitivas")
ggplot(carto_df)+
geom_sf()+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
shp_comunas_2 <- left_join(shp_comunas, Votaciones, by= c("COMUNAS" = "comuna")) %>%
mutate(perc_votos_carto = case_when(tipo_de_votacion == "PASO"~ (((AREA * (1+perc_votos)^10))),
TRUE~(((AREA * (1+perc_votos)^10)))))
p1 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO") %>%
mutate (perc_votos = .5,
iter = "CABA")
p2 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria == "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p3 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria != "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p4 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria == "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
p5 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria != "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
carto_df <- rbind(p1,
p2,
p3,
p4,
p5)
carto_df$categoria <- as.factor(carto_df$categoria)
carto_df$iter <- as.factor(carto_df$iter)
levels(carto_df$iter) <- c("CABA", "PASO", "Definitivas")
ggplot(carto_df)+
geom_sf()+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
shp_comunas_2 <- left_join(shp_comunas, Votaciones, by= c("COMUNAS" = "comuna")) %>%
mutate(perc_votos_carto = case_when(tipo_de_votacion == "PASO"~ (((AREA * (1+perc_votos)^20))),
TRUE~(((AREA * (1+perc_votos)^20)))))
p1 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO") %>%
mutate (perc_votos = .5,
iter = "CABA")
p2 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria == "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p3 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria != "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p4 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria == "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
p5 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria != "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
carto_df <- rbind(p1,
p2,
p3,
p4,
p5)
carto_df$categoria <- as.factor(carto_df$categoria)
carto_df$iter <- as.factor(carto_df$iter)
levels(carto_df$iter) <- c("CABA", "PASO", "Definitivas")
ggplot(carto_df)+
geom_sf()+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
shp_comunas_2 <- left_join(shp_comunas, Votaciones, by= c("COMUNAS" = "comuna")) %>%
mutate(perc_votos_carto = case_when(tipo_de_votacion == "PASO"~ (((AREA * (1+perc_votos)^25))),
TRUE~(((AREA * (1+perc_votos)^25)))))
p1 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO") %>%
mutate (perc_votos = .5,
iter = "CABA")
p2 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria == "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p3 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria != "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p4 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria == "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
p5 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria != "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
carto_df <- rbind(p1,
p2,
p3,
p4,
p5)
carto_df$categoria <- as.factor(carto_df$categoria)
carto_df$iter <- as.factor(carto_df$iter)
levels(carto_df$iter) <- c("CABA", "PASO", "Definitivas")
ggplot(carto_df)+
geom_sf()+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos))+
facet_wrap(~categoria)+
theme_map()+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos))+
facet_wrap(~categoria)+
theme_map()+
theme(legend.title = element_blank())+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos))+
facet_wrap(~categoria)+
theme_map()+
theme(legend.position = "none")+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
View(shp_comunas)
View(shp_comunas_2)
library(tidyverse)
library(gganimate)
library(cartogram)
library(sf)
library(stringr)
library(ggthemes)
library(viridis)
library(scales)
library(readr)
library(janitor)
library(forcats)
Votaciones <- read_delim("Votaciones.csv",
";", escape_double = FALSE, locale = locale(encoding = "WINDOWS-1252"),
trim_ws = TRUE) %>%
clean_names() %>%
mutate(perc_votos = suma_de_votos_en_mesa/suma_de_votantes_padron)
shp_comunas <- st_read("comunas.shp")
shp_comunas_2 <- left_join(shp_comunas, Votaciones, by= c("COMUNAS" = "comuna")) %>%
mutate(perc_votos_carto = case_when(tipo_de_votacion == "PASO"~ (((AREA * (1+perc_votos)^40))),
TRUE~(((AREA * (1+perc_votos)^40)))))
p1 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO") %>%
mutate (perc_votos = .8,
iter = "CABA")
p2 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria == "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p3 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "PASO",
categoria != "Presidente") %>%
mutate(iter = "PASO") %>%
cartogram_cont("perc_votos_carto")
p4 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria == "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
p5 <- shp_comunas_2 %>%
filter(tipo_de_votacion == "Definitivas",
categoria != "Presidente") %>%
mutate(iter = "Definitivas") %>%
cartogram_cont("perc_votos_carto")
carto_df <- rbind(p1,
p2,
p3,
p4,
p5)
carto_df$categoria <- as.factor(carto_df$categoria)
carto_df$iter <- as.factor(carto_df$iter)
levels(carto_df$iter) <- c("CABA", "PASO", "Definitivas")
ggplot(carto_df)+
geom_sf(aes(fill= perc_votos))+
facet_wrap(~categoria)+
theme_map()+
theme(legend.position = "none")+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
gplot <- ggplot(carto_df)+
geom_sf(aes(fill= perc_votos))+
facet_wrap(~categoria)+
theme_map()+
theme(legend.position = "none")+
transition_states(states = iter,2,1)+
ggtitle("{closest_state}")
anim_save("test.gif", gplot, width = 1000, height = 1000)
?anim_save()
install.packages("naniar")
library(naniar)
vis_miss(carto_df)
